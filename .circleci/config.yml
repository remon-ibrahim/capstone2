version: 2.1

jobs:
  build-lint:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          keys: [capstone]
      - run:
          name: install and linting
          command: |
            pwd
            ls -l
            python3 -m venv venv
            . venv/bin/activate
            make install
            make lint
      - save_cache:
          paths:
            - ./venv
          key: capstone

  create-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: creating infrastructure
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/Instance_in_public.yml \
              --stack-name "capstone-green-${CIRCLE_WORKFLOW_ID:0:7}" \
              --tags project=capstone-green 
          #   exit 1

      - run:
          name: Add server ip to ansible inventory
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:project,Values=capstone-green" \
              --output text | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'>> ~/project/.circleci/ansible/inventory.txt
        
            cat ~/project/.circleci/ansible/inventory.txt

      - save_cache:
          paths:
            - ./venv
          key: capstone

  configure-new-server:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["	fd:93:54:44:8f:2e:1d:16:c5:a3:85:0d:ff:3c:6f:e1"]
      - attach_workspace:
          at: ~/
      - run:
          name: Install ansible
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            cd .circleci/ansible
            ansible-playbook -i inventory.txt configure-server.yml
     # - destroy-environment:
      #    when: on_fail
      # Here's where you will add some code to rollback on failure

      

workflows:
  default:
    jobs:
      - build-lint
      - create-infrastructure:
          requires: [build-lint]
      - configure-new-server:
          requires: [create-infrastructure]